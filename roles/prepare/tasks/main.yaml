- name: Install tools
  yum:
    name: "{{ util }}"
  vars:
    util:
    - mc
    - wget
    - unzip
    - git
    - yum-utils
    - nano
    - jq
    - tree
    - sshfs
    - davfs2
    - sos
    - cockpit
    - cockpit-dashboard 
#    - cockpit-docker  -- conflict
    - cockpit-storaged
    - cockpit-sosreport
    - cockpit-packagekit
    state: installed

- name: Start Cockpit socket
  service:
     name: cockpit.socket
     state: started
     enabled: yes

- name: Add Docker repo
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo

- name: Install Docker
  package:
    name: "{{ docker }}"
  vars:
    docker:
    - docker-ce 
    - docker-ce-cli
    - containerd.io
    state: installed

- name: Add Docker-composer 
  get_url:
     url: "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-Linux-x86_64"
     dest: /usr/local/bin/docker-compose
     mode: '0551'

- name: Start Docker service
  service:
     name: docker
     state: started
     enabled: yes

- name: disable SELinux
  command: setenforce 0
  ignore_errors: True

- name: disable SELinux on reboot
  selinux:
     state: disabled

- name: ensure net.bridge.bridge-nf-call-iptables is set to 1
  sysctl:
     name: net.bridge.bridge-nf-call-iptables
     value: 1
     state: present

- name: add Kubernetes' YUM repository
  yum_repository:
     name: Kubernetes
     description: Kubernetes YUM repository
     baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
     gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
     gpgcheck: yes

- name: install kubectl
  yum:
     name: kubectl
     state: present
     allow_downgrade: yes

- name: Add HashiCorp repo
  get_url:
     url: https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
     dest: /etc/yum.repos.d/hashicorp.repo

- name: Terraform
  yum:
    name: terraform
    state: installed

- name: Helm download and unarh
  unarchive:
    src: https://get.helm.sh/helm-v3.4.2-linux-amd64.tar.gz
#    dest: $HOME
    dest: ./
    remote_src: yes
  when:
      -  '"/usr/local/bin/helm" is not exists'

- name: cp Helm
  copy:
    src: ./linux-amd64/helm
    dest: /usr/local/bin/helm
    owner: root
    group: root
    mode: 0755
        
- name: add PATH
  shell: echo "export PATH=/usr/local/bin:\$PATH" >/etc/profile.d/path.sh
  when:
      -  '"/etc/profile.d/path.sh" is not exists'
      
- name: Istioctl
  shell: |
     curl -L https://istio.io/downloadIstio | sh 
     cp istio*/bin/istioctl /usr/local/bin/istioctl
  when:
      -  '"/usr/local/bin/istioctl" is not exists'
      
- name: rakyll/hey
  shell: |
     curl -sf https://gobinaries.com/rakyll/hey | sh 
  when:
      -  '"/usr/local/bin/hey" is not exists'

- name: Make sure we have a 'wheel' group
  group:
     name: wheel
     state: present

- name: Create  user
  user:
     name: "{{ item.name }}"
     password: "{{item.password |  password_hash('sha512') }}"
     comment: "{{item.comment}}"
     state: present
     shell: /bin/bash
     groups: wheel
     system: yes
  loop: "{{ gui_user }}"                                       

- name: SSH Root enabled
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^PermitRootLogin'
    line: PermitRootLogin yes
  notify:
    - restart sshd
                                             